% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/safe-save-rds.R
\name{safe_saveRDS}
\alias{safe_saveRDS}
\title{Save an RDS file in a fault-tolerant manner}
\usage{
safe_saveRDS(object, filename, via_filename, ...)
}
\arguments{
\item{object}{R object to serialize.}

\item{filename}{Destination filename. Unlike
\code{\link[base:readRDS]{saveRDS}}, this can't be a connection.}

\item{via_filename}{Filename to save the file to before the rename step.
This should probably be on the same filesystem as \code{filename} to get the
atomicity guarantee described above.}

\item{...}{Passed to \code{saveRDS}.}
}
\description{
Calls \code{\link[base:readRDS]{saveRDS}} in a fault-tolerant manner, such
that if the save fails, the existing file will not be overwritten. This is
done with the following scheme:
\enumerate{
   \item Call \code{saveRDS} to save the file to \code{via_filename}.
   \item If that succeeds, call \code{\link[base:files]{file.rename}} to rename
   the new file to overwrite \code{filename}.
}
The underlying implementation of \code{file.rename} uses the POSIX function
\code{rename}, which has the guarantee that it either succeeds or leaves
the destination file untouched (subject to hardware limitations). Therefore,
this function also either succeeds, or leaves \code{filename} untouched. In
reality, this guarantee is almost certainly dependent on the operating
system, the file system, and a host of other factors. Still, even if the
guarantee is not fully satisfied, renaming the file ought to be faster and
therefore a system failure during the rename is less likely than during
\code{saveRDS}.
}
